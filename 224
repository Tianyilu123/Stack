
// method 1: one stack

class Solution {
    public int calculate(String s) {
        Stack<Integer> stack = new Stack<>();
        int sign = 1;
        int res = 0;
        for(int i=0; i<s.length(); i++) {
            if(Character.isDigit(s.charAt(i))) {
                int num = s.charAt(i) - '0';
                while(i+1<s.length() && Character.isDigit(s.charAt(i+1))) {
                    num = num*10 + s.charAt(i+1) - '0';
                    i++;
                }
                res += num*sign;
            } else if(s.charAt(i) == '+') {
                sign = 1;
            } else if(s.charAt(i) == '-') {
                sign = -1;
            } else if(s.charAt(i) == '(') {
                stack.push(res);
                stack.push(sign);
                res = 0;
                sign = 1;
            } else if(s.charAt(i) == ')') {
                res = res*stack.pop() + stack.pop();
            }
        }
        return res;
    }
}


// method 2: two stacks

class Solution {
    public int calculate(String s) {
        if(s==null || s.length()==0) return 0;
        int len = s.length();
        Stack<Integer> stack = new Stack<>();
        Stack<Integer> signStack = new Stack<>();
        
        stack.push(0);
        signStack.push(1);
        
        for(int i=0; i<=len; i++) {
            char c = i<len ? s.charAt(i) : '+';
            if(c<='9' && c>='0') {
                int num = 0;
                while(i<len && s.charAt(i) >= '0' && s.charAt(i) <= '9') {
                    num = num*10 + (s.charAt(i++) - '0');
                }
                
                i--;
                stack.push(num);
            } else if(c == '(') {
                stack.push(0);
                signStack.push(1);
            } else if(c=='+' || c == '-' || c == ')') {
                int top = stack.pop();
                int sign = signStack.pop();
                stack.push(stack.pop() + top*sign);
                
                if(c=='+') signStack.push(1);
                if(c=='-') signStack.push(-1);
            } else {
                // do nothing
            }
        }
        return stack.pop();
    }
}

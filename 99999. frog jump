青蛙要过宽为L的河，起点为1，终点为L。青蛙最大跳跃距离为D。水面上会落下树叶，青蛙可以踏着树叶过河。给定一个数组leaves[],求青蛙可以跳到河对岸的最早时间, 
如[1,3,2,4]对应L=7的河，并且leaves[0] == 1, 青蛙在任意timestamp可以达到任意可以到达的叶子或者河对岸，如果可以的话。如果D=3 最早到达的时间是4:
max(t1) = 3, max(t2) = 6, max(t3) = 6, max(t4) = 7。

public class FrogJumpRiver {
    public int frogJump(int L, int D, int[] leaves) {
          Deque<Integer> que = new LinkedList<Integer>();
          int len = leaves.length, max = 0;
          
          for(int i=0; i<len; i++) {
                int timeStamp = leaves[i];
                if(i>=D && que.getFirst() == leaves[i-D]) {
                    que.pollFirst();
                }
                
                // queue from first to last: increasing order
                while(!que.isEmpty() && que.getLast() > timeStamp) {
                      que.pollLast();
                }
                que.offerLast(timeStamp);
                
                max = Math.max(max, que.peekFirst());
          }
          
          return max;
   }
  
   private static void main(String[] args) {
          FrogJumpRiver so = new FrogJumpRiver();
          int[] leaves = {1, 3, Integer.MAX_VALUE, 2, Integer.MAX_VALUE, 4, Integer.MAX_VALUE};
          int L=7, D=3;
          
          int res = so.frogJump(L,D,leaves);
          System.out.println(res);
          
        }
  }
